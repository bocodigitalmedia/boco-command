// Generated by CoffeeScript 1.6.3
(function() {
  var CommandFactory,
    __hasProp = {}.hasOwnProperty;

  CommandFactory = (function() {
    function CommandFactory(props) {
      if (props == null) {
        props = {};
      }
      this.constructors = props.constructors;
      this.setDefaults();
    }

    CommandFactory.prototype.setDefaults = function() {
      if (this.constructors == null) {
        return this.constructors = {};
      }
    };

    CommandFactory.prototype.generateId = function() {
      return require('uuid').v4();
    };

    CommandFactory.prototype.construct = function(name, props) {
      var command, constructor, error;
      if (!this.constructors.hasOwnProperty(name)) {
        error = new Error("Command not registered: " + name);
        error.name = "CommandNotRegistered";
        throw error;
      }
      constructor = this.constructors[name];
      command = new constructor(props);
      if (command.id == null) {
        command.id = this.generateId();
      }
      return command;
    };

    CommandFactory.prototype.register = function(constructors) {
      var constructor, name, _results;
      if (constructors == null) {
        constructors = {};
      }
      _results = [];
      for (name in constructors) {
        if (!__hasProp.call(constructors, name)) continue;
        constructor = constructors[name];
        _results.push(this.constructors[name] = constructor);
      }
      return _results;
    };

    return CommandFactory;

  })();

  module.exports = CommandFactory;

}).call(this);

/*
//@ sourceMappingURL=CommandFactory.map
*/
